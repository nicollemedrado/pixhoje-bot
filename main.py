import logging
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = "7586448163:AAE3tvRZWR3YKE3yavYpleM5gntWx2T6xVE"
CHAT_ID = "@pixhojeoficial"

logging.basicConfig(level=logging.INFO)

# Respostas para conversa 1:1 (privado)
respostas_saudacao = [
    "Oi linda! üëã T√¥ aqui justamente pra te mostrar um jeito diferente de ganhar dinheiro com o que voc√™ j√° tem: seu celular.",
    "Bom dia! J√° viu a galera recebendo Pix hoje cedo s√≥ por aplicar um m√©todo simples? Quer saber como?",
    "Seja bem-vinda! Voc√™ j√° ouviu falar no m√©todo que t√° fazendo gente comum receber Pix todo dia?"
]

respostas_duvida = [
    "A pergunta √© comum, mas te entendo. Olha o que a Giovanna Lima me mandou ontem ap√≥s aplicar o m√©todo: recebeu R$100 no segundo dia!",
    "Funciona sim! Evelyn Silva aplicou e me mandou print de um Pix de R$250. O segredo √© come√ßar.",
    "A d√∫vida √© normal, mas quem aplica de verdade, colhe. Caroline Santos come√ßou na d√∫vida e hoje j√° bateu R$75 por dia."
]

respostas_acao = [
    "Perfeito. Mas vai com foco. üëâ https://bit.ly/pixhojevip\nDepois que acessar, volta aqui e me conta que eu te ajudo no passo 1.",
    "Aqui est√° o acesso que t√° mudando vidas: https://bit.ly/pixhojevip\nCome√ßa hoje e me chama se precisar de ajuda.",
    "N√£o perde tempo. Esse √© o m√©todo: https://bit.ly/pixhojevip\nVoc√™ s√≥ precisa aplicar e me contar o resultado depois."
]

respostas_neutra = [
    "Voc√™ n√£o caiu aqui por acaso... posso te mostrar um caminho real de renda. Me manda uma d√∫vida e te explico.",
    "T√¥ aqui pra te mostrar como fazer Pix ainda hoje usando s√≥ seu celular. Me pergunta o que quiser.",
    "Se estiver com curiosidade, √© s√≥ perguntar. Gosto de conversar com quem realmente quer mudar de vida."
]

# Mensagens p√∫blicas (iscas) sob comando
iscas_publicas = [
    "‚ö°Ô∏è Resultado de hoje: 3 Pix de R$100 recebidos com esse m√©todo simples. N√£o √© curso, nem venda ‚Äî √© aplica√ß√£o. Digite 'quero' no privado.",
    "üë©‚Äçü¶∞ ‚ÄúFiz R$164 na minha primeira semana!‚Äù ‚Äì Mensagem enviada por uma das seguidoras. Ser√° que √© voc√™ a pr√≥xima? üòè",
    "Hoje liberamos 20 acessos do m√©todo Pix. Ainda restam 3. Quem quiser entrar, me chama no privado com 'Pix'.",
    "üö® ATEN√á√ÉO: m√©todo atualizado liberado para quem quer fazer R$75 a R$250 no Pix sem vender nada. Use seu celular e foco. Digite /pixhoje."
]

# Detectar inten√ß√£o
def detectar_intencao(texto):
    texto = texto.lower()
    if any(p in texto for p in ["oi", "ola", "ol√°", "bom dia", "boa tarde", "boa noite"]):
        return "saudacao"
    elif any(p in texto for p in ["funciona", "verdade", "real", "mentira", "confio"]):
        return "duvida"
    elif any(p in texto for p in ["quero", "link", "acesso", "comprar", "me manda", "como", "pix"]):
        return "acao"
    else:
        return "neutra"

# Comando /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "ü§ñ Seja bem-vinda ao PixHoje!\nMe diga uma d√∫vida ou o que voc√™ busca, e eu te respondo como uma amiga que j√° descobriu o caminho. :)"
    )

# Resposta 1:1 autom√°tica
async def responder(update: Update, context: ContextTypes.DEFAULT_TYPE):
    intencao = detectar_intencao(update.message.text)
    if intencao == "saudacao":
        resposta = random.choice(respostas_saudacao)
    elif intencao == "duvida":
        resposta = random.choice(respostas_duvida)
    elif intencao == "acao":
        resposta = random.choice(respostas_acao)
    else:
        resposta = random.choice(respostas_neutra)

    await update.message.reply_text(resposta)

# Comando /isca para postar publicamente no canal
async def isca(update: Update, context: ContextTypes.DEFAULT_TYPE):
    mensagem = random.choice(iscas_publicas)
    await context.bot.send_message(chat_id=CHAT_ID, text=mensagem)

# Setup do bot
app = ApplicationBuilder().token(TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("isca", isca))
app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), responder))

if __name__ == "__main__":
    app.run_polling()
